apply plugin: 'com.android.application' //应用插件，表示这是一个应用程序模块，可以直接运行
//apply plugin:'com.android.library'    //表示这是一个库模块，只能作为代码库依附于别的应用程序模块来运行

//android闭包，在其中可配置项目构建的各种属性
android {
    compileSdkVersion 28 //指定项目的编译版本
//    buildToolsVersion //指定项目构建工具的版本

    //defaultConfig闭包用于对项目细节进行配置
    defaultConfig {
        applicationId "com.example.htz.helloworld"  //指定项目的包名
        minSdkVersion 15    //指定项目最低兼容的Android系统版本,15表示最低兼容到Android4.0系统
        targetSdkVersion 28 //指定项目目标Android系统版本
        versionCode 1   //指定项目的版本号
        versionName "1.0"   //指定项目的版本名
        testInstrumentationRunner "android.support.test.runner.AndroidJUnitRunner"
    }

    /*
    buildTypes闭包用于指定安装文件的相关配置
    通常只会有debug和release两个子闭包
    debug闭包用于指定生成测试版安装文件的配置，可以忽略不写
    release闭包用于指定正式安装文件的配置
     */
    buildTypes {
        release {
            minifyEnabled false //指定是否对项目的代码进行混淆，false表示不混淆
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'  //指定混淆时使用的规则文件
//  proguard-android.txt是在Android SDK目录下的，里面是所有项目通用的混淆规则
//  proguard-rules.pro是当前项目根目录下的，里面可以编写当前项目特有的混淆规则
        }
    }
}

/*
dependencies闭包用于指定当前项目所有的依赖关系
通常AS项目一共有三种依赖方式：本地依赖，库依赖，远程依赖
*/
dependencies {
    implementation fileTree(dir: 'libs', include: ['*.jar'])    //本地依赖
    implementation 'com.android.support:appcompat-v7:28.0.0'    //远程依赖
    implementation 'com.android.support.constraint:constraint-layout:1.1.3'
    testImplementation 'junit:junit:4.12'   //用于声明测试用例库
    androidTestImplementation 'com.android.support.test:runner:1.0.2'
    androidTestImplementation 'com.android.support.test.espresso:espresso-core:3.0.2'

//  库依赖格式：implementation 项目名(':库模块名')

}
